[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\c-prakhar.gupta\AppData\Local\Temp\idea3.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\c-prakhar.gupta\AppData\Local\Temp\idea3.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Oracle Corporation Java 15.0.1)
[debug]       Load.loadUnit: plugins took 373.0214ms
[debug]       Load.loadUnit: defsScala took 1.2155ms
[debug] [Loading] Scanning directory C:\Users\c-prakhar.gupta\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\c-prakhar.gupta\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 86.3353 ms
[debug]           Load.resolveProject(global-plugins) took 168.4623ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\c-prakhar.gupta\.sbt\1.0\plugins, plugins: List(<none>))) took 340.7088ms
[debug] [Loading] Done in C:\Users\c-prakhar.gupta\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 432.8327ms
[debug]       Load.loadUnit: cleanEvalClasses took 1.3164ms
[debug]     Load.loadUnit(file:/C:/Users/c-prakhar.gupta/.sbt/1.0/plugins/, ...) took 851.4887ms
[debug]   Load.apply: load took 1482.9699ms
[debug]   Load.apply: resolveProjects took 20.7471ms
[debug]   Load.apply: finalTransforms took 211.5647ms
[debug]   Load.apply: config.delegates took 33.0056ms
[debug]   Load.apply: Def.make(settings)... took 2831.6429ms
[debug]   Load.apply: structureIndex took 420.8053ms
[debug]   Load.apply: mkStreams took 6.1062ms
[info] loading global plugins from C:\Users\c-prakhar.gupta\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 10453.8138ms
[debug]           Load.loadUnit: plugins took 95.0979ms
[debug]           Load.loadUnit: defsScala took 0.0112ms
[debug] [Loading] Scanning directory C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project\project
[debug]             Load.loadUnit: mkEval took 23.6003ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 8.7158 ms
[info] loading settings for project calc_project-build from idea3.sbt ...
[debug]               Load.resolveProject(calc_project-build) took 69.5281ms
[debug]             Load.loadTransitive: finalizeProject(Project(id calc_project-build, base: C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project\project, plugins: List(<none>))) took 80.0807ms
[debug] [Loading] Done in C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project\project, returning: (calc_project-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 541.8841ms
[debug]           Load.loadUnit: cleanEvalClasses took 25.0084ms
[debug]         Load.loadUnit(file:/C:/Users/c-prakhar.gupta/Desktop/untitled/Calc_Project/project/, ...) took 665.0992ms
[debug]       Load.apply: load took 671.2249ms
[debug]       Load.apply: resolveProjects took 0.2863ms
[debug]       Load.apply: finalTransforms took 54.0646ms
[debug]       Load.apply: config.delegates took 1.5529ms
[debug]       Load.apply: Def.make(settings)... took 391.7692ms
[debug]       Load.apply: structureIndex took 132.1412ms
[debug]       Load.apply: mkStreams took 0.0058ms
[info] loading project definition from C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2370.4838ms
[debug]     Load.loadUnit: defsScala took 0.0146ms
[debug] [Loading] Scanning directory C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project
[debug]       Load.loadUnit: mkEval took 1.2631ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 13.4523 ms
[info] loading settings for project calc_project from build.sbt ...
[debug]         Load.resolveProject(calc_project) took 151.0966ms
[debug]       Load.loadTransitive: finalizeProject(Project(id calc_project, base: C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project, plugins: List(<none>))) took 169.5743ms
[debug] [Loading] Done in C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project, returning: (calc_project)
[debug]     Load.loadUnit: loadedProjectsRaw took 423.2697ms
[debug]     Load.loadUnit: cleanEvalClasses took 68.0515ms
[debug]   Load.loadUnit(file:/C:/Users/c-prakhar.gupta/Desktop/untitled/Calc_Project/, ...) took 2865.6685ms
[debug] Load.apply: load took 2873.4093ms
[debug] Load.apply: resolveProjects took 0.4102ms
[debug] Load.apply: finalTransforms took 126.0421ms
[debug] Load.apply: config.delegates took 1.1298ms
[debug] Load.apply: Def.make(settings)... took 358.0179ms
[debug] Load.apply: structureIndex took 154.399ms
[debug] Load.apply: mkStreams took 0.0089ms
[info] set current project to Calc_Project (in build file:/C:/Users/c-prakhar.gupta/Desktop/untitled/Calc_Project/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54883 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54883, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Calc_Project (in build file:/C:/Users/c-prakhar.gupta/Desktop/untitled/Calc_Project/)
[debug] > Exec(idea-shell, None, None)
