[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\c-prakhar.gupta\AppData\Local\Temp\idea1036.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\c-prakhar.gupta\AppData\Local\Temp\idea1036.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Oracle Corporation Java 15.0.1)
[debug]       Load.loadUnit: plugins took 357.0903ms
[debug]       Load.loadUnit: defsScala took 1.0995ms
[debug] [Loading] Scanning directory C:\Users\c-prakhar.gupta\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\c-prakhar.gupta\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 104.8568 ms
[debug]           Load.resolveProject(global-plugins) took 159.096ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\c-prakhar.gupta\.sbt\1.0\plugins, plugins: List(<none>))) took 360.1318ms
[debug] [Loading] Done in C:\Users\c-prakhar.gupta\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 453.19ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.9312ms
[debug]     Load.loadUnit(file:/C:/Users/c-prakhar.gupta/.sbt/1.0/plugins/, ...) took 844.7575ms
[debug]   Load.apply: load took 1478.5342ms
[debug]   Load.apply: resolveProjects took 21.0684ms
[debug]   Load.apply: finalTransforms took 258.0727ms
[debug]   Load.apply: config.delegates took 34.9386ms
[debug]   Load.apply: Def.make(settings)... took 3071.6224ms
[debug]   Load.apply: structureIndex took 405.171ms
[debug]   Load.apply: mkStreams took 6.1125ms
[info] loading global plugins from C:\Users\c-prakhar.gupta\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 10703.0891ms
[debug]           Load.loadUnit: plugins took 136.5096ms
[debug]           Load.loadUnit: defsScala took 0.0141ms
[debug] [Loading] Scanning directory C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project\project
[debug]             Load.loadUnit: mkEval took 26.7224ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 8.765 ms
[info] loading settings for project calc_project-build from idea1036.sbt ...
[debug]               Load.resolveProject(calc_project-build) took 34.0315ms
[debug]             Load.loadTransitive: finalizeProject(Project(id calc_project-build, base: C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project\project, plugins: List(<none>))) took 44.7285ms
[debug] [Loading] Done in C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project\project, returning: (calc_project-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 527.0617ms
[debug]           Load.loadUnit: cleanEvalClasses took 21.8869ms
[debug]         Load.loadUnit(file:/C:/Users/c-prakhar.gupta/Desktop/untitled/Calc_Project/project/, ...) took 689.8365ms
[debug]       Load.apply: load took 697.1551ms
[debug]       Load.apply: resolveProjects took 0.2951ms
[debug]       Load.apply: finalTransforms took 42.6164ms
[debug]       Load.apply: config.delegates took 1.2529ms
[debug]       Load.apply: Def.make(settings)... took 323.5537ms
[debug]       Load.apply: structureIndex took 128.1016ms
[debug]       Load.apply: mkStreams took 0.0057ms
[info] loading project definition from C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2186.4412ms
[debug]     Load.loadUnit: defsScala took 0.0123ms
[debug] [Loading] Scanning directory C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project
[debug]       Load.loadUnit: mkEval took 1.1627ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 11.795 ms
[info] loading settings for project calc_project from build.sbt ...
[debug]         Load.resolveProject(calc_project) took 140.6074ms
[debug]       Load.loadTransitive: finalizeProject(Project(id calc_project, base: C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project, plugins: List(<none>))) took 156.8127ms
[debug] [Loading] Done in C:\Users\c-prakhar.gupta\Desktop\untitled\Calc_Project, returning: (calc_project)
[debug]     Load.loadUnit: loadedProjectsRaw took 402.7177ms
[debug]     Load.loadUnit: cleanEvalClasses took 63.2488ms
[debug]   Load.loadUnit(file:/C:/Users/c-prakhar.gupta/Desktop/untitled/Calc_Project/, ...) took 2656.1523ms
[debug] Load.apply: load took 2664.1238ms
[debug] Load.apply: resolveProjects took 0.3204ms
[debug] Load.apply: finalTransforms took 113.5638ms
[debug] Load.apply: config.delegates took 1.2508ms
[debug] Load.apply: Def.make(settings)... took 338.8503ms
[debug] Load.apply: structureIndex took 133.0318ms
[debug] Load.apply: mkStreams took 0.0067ms
[info] set current project to Calc_Project (in build file:/C:/Users/c-prakhar.gupta/Desktop/untitled/Calc_Project/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54883 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54883, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Calc_Project (in build file:/C:/Users/c-prakhar.gupta/Desktop/untitled/Calc_Project/)
[debug] > Exec(idea-shell, None, None)
